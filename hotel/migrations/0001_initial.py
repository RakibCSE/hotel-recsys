# Generated by Django 2.2.1 on 2019-07-01 19:55

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=50)),
                ('country_abbr', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='HotelDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_id', models.BigIntegerField()),
                ('accommodation_type', models.TextField(max_length=300)),
                ('hotel_name', models.TextField(max_length=1000)),
                ('address', models.TextField(max_length=1000)),
                ('district', models.TextField(max_length=300)),
                ('region', models.TextField(max_length=50)),
                ('country', models.TextField(max_length=100)),
                ('thumb_urls', models.TextField(max_length=5000)),
                ('star_rating', models.FloatField()),
                ('guest_rating', models.FloatField()),
                ('review_badge', models.TextField(max_length=100)),
                ('hotel_latitude', models.FloatField()),
                ('hotel_longitude', models.FloatField()),
                ('hotel_price', models.TextField(max_length=50)),
                ('district_id', models.IntegerField()),
                ('region_id', models.IntegerField()),
                ('country_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField()),
                ('hotel_id', models.BigIntegerField()),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('srch_ci_year', models.IntegerField()),
                ('srch_ci_month', models.IntegerField()),
                ('srch_co_year', models.IntegerField()),
                ('srch_co_month', models.IntegerField()),
                ('hotel_country', models.IntegerField()),
                ('user_location_country', models.IntegerField()),
                ('user_location_city', models.IntegerField()),
                ('user_location_region', models.IntegerField()),
                ('is_booking', models.IntegerField()),
                ('orig_destination_distance', models.FloatField()),
                ('srch_destination_id', models.IntegerField()),
                ('srch_adults_cnt', models.IntegerField()),
                ('srch_children_cnt', models.IntegerField()),
                ('srch_rm_cnt', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fullname', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
